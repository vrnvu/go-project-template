name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: "${{ github.workflow }}-${{ github.head_ref || github.ref }}"
  cancel-in-progress: true

jobs:
  setup:
    name: setup
    runs-on: ubuntu-latest
    outputs:
      artifact-name: setup-${{ github.run_id }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
          cache-dependency-path: go.sum

      - name: Setup (deps, tools)
        run: go run cmd/ci/main.go -setup

      - name: Archive Go toolchain and cache
        run: |
          mkdir -p .cache-bundle
          echo "GOPATH=$(go env GOPATH)" > .cache-bundle/env
          tar -czf .cache-bundle/go-cache.tgz -C $(go env GOPATH) pkg/mod || true
          tar -czf .cache-bundle/go-build.tgz -C ~/.cache go-build || true
          tar -czf .cache-bundle/gobin.tgz -C $(go env GOPATH)/bin . || true

      - name: Upload setup artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ jobs.setup.outputs.artifact-name }}
          path: .cache-bundle

  lint:
    name: lint
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
          cache-dependency-path: go.sum

      - name: Download setup artifacts
        uses: actions/download-artifact@v4
        with:
          name: setup-${{ github.run_id }}
          path: .cache-bundle

      - name: Restore Go caches and tools
        run: |
          source .cache-bundle/env || true
          tar -xzf .cache-bundle/go-cache.tgz -C ~/.cache || true
          tar -xzf .cache-bundle/go-build.tgz -C ~/.cache || true
          mkdir -p $(go env GOPATH)/bin
          tar -xzf .cache-bundle/gobin.tgz -C $(go env GOPATH)/bin || true

      - name: Run linter
        run: go run cmd/ci/main.go -lint

  build:
    name: build
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
          cache-dependency-path: go.sum

      - name: Download setup artifacts
        uses: actions/download-artifact@v4
        with:
          name: setup-${{ github.run_id }}
          path: .cache-bundle

      - name: Restore Go caches and tools
        run: |
          source .cache-bundle/env || true
          tar -xzf .cache-bundle/go-cache.tgz -C ~/.cache || true
          tar -xzf .cache-bundle/go-build.tgz -C ~/.cache || true
          mkdir -p $(go env GOPATH)/bin
          tar -xzf .cache-bundle/gobin.tgz -C $(go env GOPATH)/bin || true

      - name: Build
        run: go run cmd/ci/main.go -build

      - name: Test CLI
        run: |
          ./bin/app --help
          ./bin/app

  test:
    name: test
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
          cache-dependency-path: go.sum

      - name: Download setup artifacts
        uses: actions/download-artifact@v4
        with:
          name: setup-${{ github.run_id }}
          path: .cache-bundle

      - name: Restore Go caches and tools
        run: |
          source .cache-bundle/env || true
          tar -xzf .cache-bundle/go-cache.tgz -C ~/.cache || true
          tar -xzf .cache-bundle/go-build.tgz -C ~/.cache || true
          mkdir -p $(go env GOPATH)/bin
          tar -xzf .cache-bundle/gobin.tgz -C $(go env GOPATH)/bin || true

      - name: Run fast tests
        run: go run cmd/ci/main.go -test

      - name: Run slow tests
        run: go run cmd/ci/main.go -test-slow

      - name: Run test coverage
        run: go run cmd/ci/main.go -test-coverage

      - name: Check file sizes
        run: go run cmd/ci/main.go -check-size
